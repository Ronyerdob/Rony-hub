-- RONY HUB by ronyerdob - Biblioteca GUI Futurista para Roblox (Mobile Executors)
-- Compatível com Delta, Fluxus Mobile, Arceus Mobile, Codex

local TweenService = game:GetService("TweenService")

local RONYHUB = {}
RONYHUB.__index = RONYHUB

-- Tabela interna de temas
local Theme = {
    Background = Color3.fromRGB(15, 15, 20),
    Accent = Color3.fromRGB(255, 204, 0), -- Amarelo suave
    Text = Color3.fromRGB(230, 230, 240),
    Glass = Color3.fromRGB(30, 30, 40),
    GlassTransparency = 0.5
}

-- Cria ScreenGui principal
function RONYHUB:Init(name)
    local player = game:GetService("Players").LocalPlayer
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name or "RONY_HUB"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false
    self.ScreenGui = screenGui

    -- Botão flutuante
    local toggleBtn = Instance.new("ImageButton")
    toggleBtn.Name = "ToggleButton"
    toggleBtn.Size = UDim2.new(0, 50, 0, 50)
    toggleBtn.Position = UDim2.new(1, -60, 0.5, -25)
    toggleBtn.BackgroundTransparency = 1
    toggleBtn.Image = "rbxassetid://1150000000" -- placeholder
    toggleBtn.Parent = screenGui
    toggleBtn.ZIndex = 10

    -- Painel principal
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 360, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -180, 0.5, -250)
    mainFrame.BackgroundColor3 = Theme.Glass
    mainFrame.BackgroundTransparency = Theme.GlassTransparency
    mainFrame.Visible = false
    mainFrame.Parent = screenGui

    -- Bordas arredondadas e contornos
    local corner = Instance.new("UICorner", mainFrame)
    corner.CornerRadius = UDim.new(0, 12)
    local stroke = Instance.new("UIStroke", mainFrame)
    stroke.Thickness = 1
    stroke.Color = Theme.Accent

    -- Layout: abas laterais + painel de conteúdo
    local sidebar = Instance.new("Frame", mainFrame)
    sidebar.Name = "Sidebar"
    sidebar.Size = UDim2.new(0, 100, 1, 0)
    sidebar.Position = UDim2.new(0, 0, 0, 0)
    sidebar.BackgroundTransparency = 1

    local content = Instance.new("Frame", mainFrame)
    content.Name = "Content"
    content.Size = UDim2.new(1, -100, 1, 0)
    content.Position = UDim2.new(0, 100, 0, 0)
    content.BackgroundTransparency = 1

    content.UIListLayout = Instance.new("UIListLayout", content)
    content.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    content.UIListLayout.Padding = UDim.new(0, 6)

    -- Armazenar referências
    self.ToggleButton = toggleBtn
    self.MainFrame = mainFrame
    self.Sidebar = sidebar
    self.Content = content
    self.Tabs = {}

    -- Conectar evento de abrir/fechar
    toggleBtn.MouseButton1Click:Connect(function()
        self:ToggleMenu()
    end)
end

-- Alterna visibilidade do menu
function RONYHUB:ToggleMenu()
    local mf = self.MainFrame
    mf.Visible = not mf.Visible
    -- Fade-in/out
    for _, gui in ipairs({mf, self.ToggleButton}) do
        TweenService:Create(gui, TweenInfo.new(0.3), {BackgroundTransparency = mf.Visible and Theme.GlassTransparency or 1}):Play()
    end
end

-- Função para criar abas
function RONYHUB:CreateTab(name)
    local index = #self.Tabs + 1
    -- Botão na sidebar
    local btn = Instance.new("TextButton", self.Sidebar)
    btn.Name = name.."Tab"
    btn.Size = UDim2.new(1, -10, 0, 40)
    btn.Position = UDim2.new(0, 5, 0, 5 + (index-1)*45)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.TextColor3 = Theme.Text
n    btn.BackgroundColor3 = Theme.Background
    btn.BackgroundTransparency = 0.2
    btn.AutoButtonColor = false
    -- Efeitos de hover
    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundTransparency = 0.1}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundTransparency = 0.2}):Play()
    end)

    -- Painel de conteúdo dedicado
    local panel = Instance.new("Frame", self.Content)
    panel.Name = name.."Panel"
    panel.Size = UDim2.new(1, 0, 0, 440)
    panel.Visible = false
    panel.BackgroundTransparency = 1

    self.Tabs[name] = {Button = btn, Panel = panel}

    -- Conectar clique
    btn.MouseButton1Click:Connect(function()
        self:SwitchTab(name)
    end)

    return panel
end

-- Alterna entre abas
function RONYHUB:SwitchTab(name)
    for tabName, data in pairs(self.Tabs) do
        data.Panel.Visible = (tabName == name)
        -- animação de slide/fade
        if data.Panel.Visible then
            data.Panel.Position = UDim2.new(0, 0, 0, 0)
            data.Panel.BackgroundTransparency = 1
            TweenService:Create(data.Panel, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
        end
    end
end

-- Cria botão
function RONYHUB:CreateButton(tab, text, callback)
    local btn = Instance.new("TextButton", tab)
    btn.Size = UDim2.new(0, 120, 0, 30)
    btn.Text = text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.TextColor3 = Theme.Text
    btn.BackgroundColor3 = Theme.Glass
    btn.BackgroundTransparency = Theme.GlassTransparency
    local corner = Instance.new("UICorner", btn)
    corner.CornerRadius = UDim.new(0, 8)
    btn.AutoButtonColor = false
    btn.MouseButton1Click:Connect(function()
        -- clique feedback (flash amarelo)
        local original = btn.BackgroundColor3
        btn.BackgroundColor3 = Theme.Accent
        task.delay(0.1, function() btn.BackgroundColor3 = original end)
        callback()
    end)
    return btn
end

-- Cria toggle
function RONYHUB:CreateToggle(tab, text, callback)
    local frame = Instance.new("Frame", tab)
    frame.Size = UDim2.new(0, 180, 0, 30)
    frame.BackgroundTransparency = 1
    local lbl = Instance.new("TextLabel", frame)
    lbl.Size = UDim2.new(0.7, 0, 1, 0)
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Theme.Text
    lbl.BackgroundTransparency = 1
    local btn = Instance.new("TextButton", frame)
    btn.Size = UDim2.new(0, 40, 0, 20)
    btn.Position = UDim2.new(0.75, 0, 0.1, 0)
    btn.Text = ""
    btn.BackgroundColor3 = Theme.Glass
    btn.BackgroundTransparency = Theme.GlassTransparency
    local corner = Instance.new("UICorner", btn)
    corner.CornerRadius = UDim.new(0, 10)
    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        callback(state)
        -- animação de posição e cor
        local goal = {Position = state and UDim2.new(0.75, 20, 0.1, 0) or UDim2.new(0.75, 0, 0.1, 0)}
        TweenService:Create(btn, TweenInfo.new(0.2), goal):Play()
    end)
    return frame
end

-- Cria dropdown
function RONYHUB:CreateDropdown(tab, text, options, callback)
    local frame = Instance.new("Frame", tab)
    frame.Size = UDim2.new(0, 200, 0, 30)
    frame.BackgroundTransparency = 1
    local lbl = Instance.new("TextLabel", frame)
    lbl.Size = UDim2.new(0.5, 0, 1, 0)
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Theme.Text
    lbl.BackgroundTransparency = 1
    local dd = Instance.new("TextButton", frame)
    dd.Size = UDim2.new(0.45, 0, 1, 0)
    dd.Position = UDim2.new(0.5, 0, 0, 0)
    dd.Text = options[1]
    dd.Font = Enum.Font.Gotham
    dd.TextSize = 14
    local corner = Instance.new("UICorner", dd)
    corner.CornerRadius = UDim.new(0, 8)
    local open = false
    local list
    dd.MouseButton1Click:Connect(function()
        open = not open
        if open then
            list = Instance.new("Frame", frame)
            list.Size = UDim2.new(1, 0, 0, #options*25)
            list.Position = UDim2.new(0, 0, 1, 2)
            list.BackgroundColor3 = Theme.Glass
            list.BackgroundTransparency = Theme.GlassTransparency
            local layout = Instance.new("UIListLayout", list)
            layout.SortOrder = Enum.SortOrder.LayoutOrder
            for i, opt in ipairs(options) do
                local it = Instance.new("TextButton", list)
                it.Size = UDim2.new(1, 0, 0, 25)
                it.Text = opt
                it.Font = Enum.Font.Gotham
                it.TextSize = 14
                it.TextColor3 = Theme.Text
                it.BackgroundTransparency = 1
                it.MouseButton1Click:Connect(function()
                    dd.Text = opt
                    callback(opt)
                    list:Destroy()
                    open = false
                end)
            end
        else
            if list then list:Destroy() end
        end
    end)
    return frame
end

-- Cria label
function RONYHUB:CreateLabel(tab, text)
    local lbl = Instance.new("TextLabel", tab)
    lbl.Size = UDim2.new(1, 0, 0, 20)
    lbl.Text = text
    lbl.Font = Enum.Font.GothamBold
    lbl.TextSize = 16
    lbl.TextColor3 = Theme.Text
    lbl.BackgroundTransparency = 1
    return lbl
end

-- Cria slider
function RONYHUB:CreateSlider(tab, text, min, max, default, callback)
    local frame = Instance.new("Frame", tab)
    frame.Size = UDim2.new(0, 260, 0, 30)
    frame.BackgroundTransparency = 1
    local lbl = Instance.new("TextLabel", frame)
    lbl.Size = UDim2.new(0.3, 0, 1, 0)
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Theme.Text
    lbl.BackgroundTransparency = 1
    local sliderBg = Instance.new("Frame", frame)
    sliderBg.Size = UDim2.new(0.65, 0, 0.4, 0)
    sliderBg.Position = UDim2.new(0.33, 0, 0.3, 0)
    sliderBg.BackgroundColor3 = Theme.Glass
    sliderBg.BackgroundTransparency = Theme.GlassTransparency
    local corner = Instance.new("UICorner", sliderBg)
    corner.CornerRadius = UDim.new(0, 8)
    local fill = Instance.new("Frame", sliderBg)
    fill.Size = UDim2.new((default-min)/(max-min), 0, 1, 0)
    fill.BackgroundColor3 = Theme.Accent
    fill.LayoutOrder = 1
    local dragger = Instance.new("TextButton", sliderBg)
    dragger.Size = UDim2.new(0, 12, 1, 0)
    dragger.Position = UDim2.new((default-min)/(max-min) - 0.02, 0, 0, 0)
    dragger.Text = ""
    local dragCorner = Instance.new("UICorner", dragger)
    dragCorner.CornerRadius = UDim.new(0, 6)

    -- Arrastar
    local dragging = false
    dragger.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    dragger.InputEnded:Connect(function(input)
        dragging = false
    end)
    dragger.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
            local rel = math.clamp((input.Position.X - sliderBg.AbsolutePosition.X) / sliderBg.AbsoluteSize.X, 0, 1)
            fill.Size = UDim2.new(rel, 0, 1, 0)
            dragger.Position = UDim2.new(rel - 0.02, 0, 0, 0)
            local value = min + rel * (max - min)
            callback(value)
        end
    end)
    return frame
end

-- Aplica tema customizado
function RONYHUB:SetTheme(data)
    for k,v in pairs(data) do
        if Theme[k] ~= nil then Theme[k] = v end
    end
end

-- Exemplo de uso (teste funcional)
-- Inicializar
local hub = setmetatable({}, RONYHUB)
hub:Init("RONY HUB by ronyerdob")

-- Criar abas
local inicio = hub:CreateTab("Início")
local config = hub:CreateTab("Configurações")

-- Conteúdo Início
hub:CreateButton(inicio, "Clique Rápido", function()
    print("Botão Clique Rápido pressionado!")
end)

-- Conteúdo Configurações
hub:CreateSlider(config, "Velocidade", 0, 100, 50, function(v)
    print(string.format("Velocidade ajustada para %.1f", v))
end)
hub:CreateToggle(config, "Ativar Modo", function(state)
    print("Modo ativado?", state)
end)
hub:CreateDropdown(config, "Opções", {"Opção 1", "Opção 2", "Opção 3"}, function(opt)
    print("Selecionado:", opt)
end)

-- Mostrar menu
hub:ToggleMenu()

return RONYHUB
